(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[442],{65005:function(){},15130:function(){},49879:function(){},6143:function(e,t,r){"use strict";r.d(t,{uk:function(){return p},c3:function(){return a},OB:function(){return o},fW:function(){return c},bX:function(){return l}});var s={src:"/_next/static/media/ctez.76dc7655.png"},n={src:"/_next/static/media/fxhash.adc967f1.png"},i={src:"/_next/static/media/xtz.5d1f6ae4.png"};let o={type:"native",name:"Tezos",ticker:"XTZ",decimals:6,iconUrl:i.src},a={type:"native",name:"Tezos",ticker:"XTZ",decimals:18,iconUrl:i.src},d={type:"fa1.2",name:"Ctez",ticker:"CTEZ",address:"KT1GM2AnBAJWdzrChp3hTYFTSb6Dmh61peBP",decimals:0,iconUrl:s.src},c=[{tezos:{token:o,ticketerContractAddress:"KT1XsAj9z2DX2LLrq6bTRJBDubrME2auietW"},etherlink:{token:a}},{tezos:{token:d,ticketerContractAddress:"KT1PmYUomF3HDxsGWYQUCbLi2X8WvT7ZHv8o",tickerHelperContractAddress:"KT1TZg9EwGHKbfWvsHGsqBjm3J5NhJBtHPKX"},etherlink:{token:{type:"erc20",name:"Ctez",ticker:"CTEZ",address:"0xe448b46E3c9167961ae4bD498E8dFb78Ae97da8a",decimals:0,iconUrl:s.src}}},{tezos:{token:{type:"fa2",name:"fxhash, token: 42",ticker:"FXHASH_42",address:"KT1GemMPvp2bV8TUV1DzWTwdhT27TtMgJiTw",tokenId:"42",decimals:0,iconUrl:n.src},ticketerContractAddress:"KT1GQEybCQffb6YJ5NH9GhPEeRyufrYP3amN",tickerHelperContractAddress:"KT1LstLU529PtDUQHo2x8WybNXBzLXnF6Tkv"},etherlink:{token:{type:"erc20",name:"fxhash, token: 42",ticker:"FXHASH_42",address:"0xcB5d40c6B1bdf5Cd51b3801351b0A68D101a561b",decimals:0,iconUrl:n.src}}}],l=c.map(e=>{let{tezos:t,etherlink:r}=e;return{tezos:t.token,etherlink:r.token}}),h={};for(let e of c)"native"===e.tezos.token.type?(h.native||(h.native={}),h.native.tezos=e.tezos.token):(h[e.tezos.token.type]||(h[e.tezos.token.type]={}),"fa1.2"===e.tezos.token.type?h[e.tezos.token.type][e.tezos.token.address]=e.tezos.token:(h[e.tezos.token.type][e.tezos.token.address]||(h[e.tezos.token.type][e.tezos.token.address]={}),h[e.tezos.token.type][e.tezos.token.address][e.tezos.token.tokenId]=e.tezos.token)),"native"===e.etherlink.token.type?(h.native||(h.native={}),h.native.etherlink=e.etherlink.token):(h[e.etherlink.token.type]||(h[e.etherlink.token.type]={}),"erc20"===e.etherlink.token.type&&(h[e.etherlink.token.type][e.etherlink.token.address]=e.etherlink.token));let p=(e,t)=>{var r,s,n,i,o;return"native"===e.type?t?null===(r=h[e.type])||void 0===r?void 0:r.tezos:null===(s=h[e.type])||void 0===s?void 0:s.etherlink:e.address?"fa1.2"===e.type||"erc20"===e.type?null===(n=h[e.type])||void 0===n?void 0:n[e.address]:"fa2"===e.type&&e.tokenId?null===(o=h[e.type])||void 0===o?void 0:null===(i=o[e.address])||void 0===i?void 0:i[e.tokenId]:void 0:void 0}},54333:function(e,t,r){"use strict";r.d(t,{$z:function(){return eh},P6:function(){return R},gt:function(){return el},gu:function(){return T},hj:function(){return m},uF:function(){return ep},vp:function(){return N},wy:function(){return ee},xh:function(){return et}});var s,n,i=r(55549),o=r(27725),a=r(97882),d=r(15365),c=r(4170),l=r(13021),h=r(99952),p=Object.defineProperty,u=(e,t,r)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,k=(e,t)=>{for(var r in t)p(e,r,{get:t[r],enumerable:!0})},g=(e,t,r)=>(u(e,"symbol"!=typeof t?t+"":t,r),r),T=((s=T||{})[s.Deposit=0]="Deposit",s[s.Withdrawal=1]="Withdrawal",s[s.DepositRevert=2]="DepositRevert",s[s.WithdrawalRevert=3]="WithdrawalRevert",s),m=((n=m||{})[n.Pending=0]="Pending",n[n.Created=100]="Created",n[n.Sealed=200]="Sealed",n[n.Finished=300]="Finished",n[n.Failed=400]="Failed",n),b=(e,t)=>e===t,v=(e,t,r)=>{if(null===t||null===r||t.length!==r.length)return!1;let s=t.length;for(let n=0;n<s;n++)if(!e(t[n],r[n]))return!1;return!0},y={};k(y,{isArray:()=>f,isReadonlyArray:()=>w,isTokenBridgeService:()=>C});var f=e=>Array.isArray(e),w=e=>Array.isArray(e),C=e=>"boolean"==typeof e.isStarted&&"function"==typeof e.start&&"function"==typeof e.stop,_={};k(_,{trimSlashes:()=>A});var A=e=>{let t=e.startsWith("/"),r=e.endsWith("/");return t&&r?e.slice(1,-1):t?e.slice(1):r?e.slice(0,-1):e},S={};k(S,{convertAddressToBytes:()=>z,convertBytesToAddress:()=>x,getOperationTotalCost:()=>D,isFA2Token:()=>P});var P=e=>!!e.tokenId,z=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=(0,a.aZ)(e);return t?"0x"+r:r},x=e=>(e.startsWith("0x")&&(e=e.substring(2)),(0,a.W0)(e)),D=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b,r=null,s=null;return function(){return v(t,r,arguments)||(s=e.apply(null,arguments)),r=arguments,s}}(e=>e.fee+250*Number.parseInt(e.storageDiff)),B={};k(B,{isAddress:()=>W,isTransaction:()=>O,prepareHexPrefix:()=>L,toChecksumAddress:()=>I});var W=e=>c.UJ(e,!0),E=/^0x[0-9a-f]{64}$/,O=e=>E.test(e),I=e=>d.P6Y.toChecksumAddress(e),L=(e,t)=>e.startsWith("0x")?t?e:e.substring(2):t?"0x"+e:e,R={};k(R,{getInitialOperation:()=>F,getInitialOperationHash:()=>U,isBridgeTokenTransferOwner:()=>H});var F=e=>0===e.kind?e.tezosOperation:e.etherlinkOperation,U=e=>0===e.kind?e.tezosOperation.hash:e.etherlinkOperation.hash,H=(e,t)=>e.source===t||e.receiver===t,M=class{getUrl(e){return new URL(this.baseUrl+"/"+_.trimSlashes(e))}async getRequestInit(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new Headers(e.headers);return t.has("Accept")||t.append("Accept","application/json"),t.has("Content-Type")||t.append("Content-Type","application/json"),e.headers=t,e}async fetch(e,t,r){let s=!(arguments.length>3)||void 0===arguments[3]||arguments[3];s&&(r=await this.getRequestInit(r));let n="string"==typeof e?this.getUrl(e):e,i=await fetch(n.href,r);if(!i.ok)throw Error(await i.text());return"none"===t?void 0:await ("json"===t?i.json():i.text())}constructor(e){g(this,"baseUrl"),this.baseUrl=_.trimSlashes(e)}},N=class{addListener(e){return this.listeners.add(e),this}removeListener(e){return this.listeners.has(e)&&this.listeners.delete(e),this}removeAllListeners(){return this.listeners=new Set,this}emit(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];this.listeners.size&&(1===this.listeners.size?this.listeners.values().next().value(...t):[...this.listeners].forEach(e=>e(...t)))}constructor(){g(this,"listeners",new Set)}},Q=class{get counter(){return this._counter}set counter(e){this._counter=e}[Symbol.dispose](){this.counterExpirationWatcherId&&clearTimeout(this.counterExpirationWatcherId),this.actionWatchers.forEach(e=>clearTimeout(e))}setTimeout(e){return new Promise(t=>{this.counterExpirationMs&&this.resetCounterExpiration();let r=Math.min(this.counter,this.timeouts.length-1),s=setTimeout(async()=>{this.actionWatchers.delete(s),clearTimeout(s),await e(),t()},this.timeouts[r]);this.actionWatchers.add(s),this.counter++})}resetCounter(){this.counter=0}resetCounterExpiration(){this.counterExpirationWatcherId&&clearTimeout(this.counterExpirationWatcherId),this.counterExpirationWatcherId=setTimeout(()=>{this.resetCounter(),this.counterExpirationWatcherId=void 0},this.counterExpirationMs)}constructor(e,t){this.timeouts=e,this.counterExpirationMs=t,g(this,"counterExpirationWatcherId"),g(this,"actionWatchers",new Set),g(this,"_counter",0)}},q=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"ticketHash",type:"uint256"},{indexed:!1,internalType:"address",name:"ticketOwner",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"inboxLevel",type:"uint256"},{indexed:!1,internalType:"uint256",name:"inboxMsgId",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"ticketHash",type:"uint256"},{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"tiketOwner",type:"address"},{indexed:!1,internalType:"bytes",name:"receiver",type:"bytes"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outboxLevel",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outboxMsgId",type:"uint256"}],name:"Withdraw",type:"event"},{inputs:[{internalType:"bytes22",name:"ticketer",type:"bytes22"},{internalType:"bytes",name:"content",type:"bytes"},{internalType:"address",name:"owner",type:"address"}],name:"getBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"ticketReceiver",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes22",name:"ticketer",type:"bytes22"},{internalType:"bytes",name:"identifier",type:"bytes"}],name:"inboxDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"ticketOwner",type:"address"},{internalType:"bytes",name:"receiver",type:"bytes"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes22",name:"ticketer",type:"bytes22"},{internalType:"bytes",name:"content",type:"bytes"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}],j=class{async withdraw(e){let t=S.convertAddressToBytes(e.tezosReceiverAddress,!0),r=S.convertAddressToBytes(e.tezosTicketerAddress,!0),s=S.convertAddressToBytes(e.tezosProxyAddress),n=this.kernelContract.methods.withdraw(e.etherlinkTokenProxyContractAddress,t+s,e.amount,r,e.tezosTicketerContent).encodeABI(),i=await this.etherlinkToolkit.eth.getGasPrice();return await this.etherlinkToolkit.eth.sendTransaction({from:e.etherlinkSenderAddress,to:this.withdrawPrecompileAddress,gas:BigInt("30000"),gasPrice:i,data:n})}constructor(e){g(this,"etherlinkToolkit"),g(this,"kernelContract"),g(this,"withdrawPrecompileAddress"),this.etherlinkToolkit=e.etherlinkToolkit,this.withdrawPrecompileAddress=e.withdrawPrecompileAddress,this.kernelContract=new this.etherlinkToolkit.eth.Contract(q,this.withdrawPrecompileAddress)}},G={};function X(e){let t=e.batch;return(void 0===e.isNeedToReset||e.isNeedToReset)&&t.withContractCall(e.tokenContract.methods.approve(e.approvedAddress,0n)),t.withContractCall(e.tokenContract.methods.approve(e.approvedAddress,e.approvedAmount)),Array.isArray(e.contractCalls)?e.contractCalls.forEach(e=>t.withContractCall(e)):t.withContractCall(e.contractCalls),t}k(G,{wrapContractCallsWithApprove:()=>X});var J={};function V(e){let t=e.batch.withContractCall(e.tokenContract.methods.update_operators([{add_operator:{owner:e.ownerAddress,operator:e.approvedAddress,token_id:e.tokenId}}]));return Array.isArray(e.contractCalls)?e.contractCalls.forEach(e=>t.withContractCall(e)):t.withContractCall(e.contractCalls),t.withContractCall(e.tokenContract.methods.update_operators([{remove_operator:{owner:e.ownerAddress,operator:e.approvedAddress,token_id:e.tokenId}}])),t}k(J,{wrapContractCallsWithApprove:()=>V});var K=class{async depositNativeToken(e){let t=await this.createDepositNativeTokenOperation(e.etherlinkReceiverAddress,e.ticketerContractAddress);return this.createBatch().withContractCall(t,{amount:Number(e.amount),mutez:!0}).send()}async depositNonNativeToken(e){let t=await this.createDepositNonNativeTokenOperation(e.etherlinkReceiverAddress,e.amount,e.etherlinkTokenProxyContractAddress,e.ticketHelperContractAddress),r=this.createBatch();return(r=await (S.isFA2Token(e.token)?this.wrapContractCallsWithFA2TokenApprove(r,t,e.token,e.ticketHelperContractAddress):this.wrapContractCallsWithFA12TokenApprove(r,t,e.token,e.amount,e.ticketHelperContractAddress))).send()}async finishWithdraw(e,t){let r=await this.tezosToolkit.wallet.pkh(),s=await this.tezosToolkit.rpc.getChainId(),n=await this.tezosToolkit.rpc.getBlockHash(),i=await this.tezosToolkit.rpc.getContract(r),o={kind:h.Qg.SMART_ROLLUP_EXECUTE_OUTBOX_MESSAGE,source:r,fee:"3000",counter:(parseInt(i.counter||"0")+1).toString(),gas_limit:"10000",storage_limit:"100",rollup:this.rollupAddress,cemented_commitment:e,output_proof:t};if((await this.tezosToolkit.rpc.runOperation({chain_id:s,operation:{branch:n,contents:[o]}})).contents.some(e=>{var t,r;return(null===(r=e.metadata)||void 0===r?void 0:null===(t=r.operation_result)||void 0===t?void 0:t.status)==="failed"}))throw Error("No possible to execute an outbox message");let a=await this.localForger.forge({branch:n,contents:[o]}),d=await this.tezosToolkit.signer.sign(a,new Uint8Array([3]));return await this.tezosToolkit.rpc.injectOperation(d.sbytes)}async createDepositNativeTokenOperation(e,t){let r=await this.getNativeTokenTicketHelperContract(t),s=this.packDepositRoutingInfo(e);return r.methodsObject.deposit({evm_address:this.rollupAddress,l2_address:s})}async createDepositNonNativeTokenOperation(e,t,r,s){let n=await this.getNonNativeTokenTicketHelperContract(s),i=this.packDepositRoutingInfo(e,r);return n.methodsObject.deposit({rollup:this.rollupAddress,routing_info:i,amount:t})}packDepositRoutingInfo(e,t){return t?"".concat(e.substring(2)).concat(t.substring(2)):e.substring(2)}async wrapContractCallsWithFA12TokenApprove(e,t,r,s,n){let i=await this.getFA12TokenContract(r.address);return G.wrapContractCallsWithApprove({batch:e,approvedAddress:n,approvedAmount:s,tokenContract:i,contractCalls:t})}async wrapContractCallsWithFA2TokenApprove(e,t,r,s){let[n,i]=await Promise.all([this.getFA2TokenContract(r.address),this.tezosToolkit.wallet.pkh()]);return J.wrapContractCallsWithApprove({batch:e,approvedAddress:s,ownerAddress:i,tokenId:r.tokenId,tokenContract:n,contractCalls:t})}constructor(e){g(this,"tezosToolkit"),g(this,"rollupAddress"),g(this,"localForger",new l.P$),this.tezosToolkit=e.tezosToolkit,this.rollupAddress=e.rollupAddress}},Z=class extends K{createBatch(e){return this.tezosToolkit.contract.batch(e)}getNativeTokenTicketHelperContract(e){return this.tezosToolkit.contract.at(e)}getNonNativeTokenTicketHelperContract(e){return this.tezosToolkit.contract.at(e)}getFA12TokenContract(e){return this.tezosToolkit.contract.at(e)}getFA2TokenContract(e){return this.tezosToolkit.contract.at(e)}constructor(e){super(e),g(this,"wallet"),this.wallet=new Y(e)}},Y=class extends K{createBatch(e){return this.tezosToolkit.wallet.batch(e)}getNativeTokenTicketHelperContract(e){return this.tezosToolkit.wallet.at(e)}getNonNativeTokenTicketHelperContract(e){return this.tezosToolkit.wallet.at(e)}getFA12TokenContract(e){return this.tezosToolkit.wallet.at(e)}getFA2TokenContract(e){return this.tezosToolkit.wallet.at(e)}},$={prim:"pair",annots:["%content"],args:[{prim:"nat"},{prim:"option",args:[{prim:"bytes"}]}]},ee=class{get isStarted(){return this._isStarted}async start(){if(this.isStarted)return;this.attachEvents();let e=[];y.isTokenBridgeService(this.bridgeComponents.tokensBridgeDataProvider)&&e.push(this.bridgeComponents.tokensBridgeDataProvider.start()),y.isTokenBridgeService(this.bridgeComponents.balancesBridgeDataProvider)&&e.push(this.bridgeComponents.balancesBridgeDataProvider.start()),y.isTokenBridgeService(this.bridgeComponents.transfersBridgeDataProvider)&&e.push(this.bridgeComponents.transfersBridgeDataProvider.start()),await Promise.all(e),this._isStarted=!0}stop(){this.isStarted&&(y.isTokenBridgeService(this.bridgeComponents.tokensBridgeDataProvider)&&this.bridgeComponents.tokensBridgeDataProvider.stop(),y.isTokenBridgeService(this.bridgeComponents.balancesBridgeDataProvider)&&this.bridgeComponents.balancesBridgeDataProvider.stop(),y.isTokenBridgeService(this.bridgeComponents.transfersBridgeDataProvider)&&this.bridgeComponents.transfersBridgeDataProvider.stop(),this.rejectAndClearAllStatusWatchers("The TokenBridge has been stopped!"),this._isStarted=!1)}subscribeToAccount(e){this.bridgeComponents.transfersBridgeDataProvider.subscribeToTokenTransfers(e)}unsubscribeFromAccount(e){this.bridgeComponents.transfersBridgeDataProvider.unsubscribeFromTokenTransfers(e)}subscribeToTokenTransfer(e){this.bridgeComponents.transfersBridgeDataProvider.subscribeToTokenTransfer(e)}unsubscribeFromTokenTransfer(e){this.bridgeComponents.transfersBridgeDataProvider.unsubscribeFromTokenTransfer(e)}async waitForBridgeTokenTransferStatus(e,t){if(e.status>=t)return e;let r=R.getInitialOperationHash(e),s=await this.bridgeComponents.transfersBridgeDataProvider.getTokenTransfer(r);if((null==s?void 0:s.status)===t)return s;let n=this.tokenTransferOperationWatchers.get(r);n||(n=new Map,this.tokenTransferOperationWatchers.set(r,n));let i=n.get(t);if(i)return i.promise;let o=new Promise((e,s)=>{let n=this.tokenTransferOperationWatchers.get(r);if(!n){s("Status watchers map not found for the ".concat(r," operation"));return}setTimeout(()=>{this.bridgeComponents.transfersBridgeDataProvider.subscribeToTokenTransfer(r),n.set(t,{promise:o,resolve:t=>{this.bridgeComponents.transfersBridgeDataProvider.unsubscribeFromTokenTransfer(r),e(t)},reject:e=>{this.bridgeComponents.transfersBridgeDataProvider.unsubscribeFromTokenTransfer(r),s(e)}})},0)});return o}async deposit(e,t,r,s){let n="string"==typeof r?r:await this.getEtherlinkConnectedAddress(),i="string"!=typeof r&&r?r:s,o=!i||void 0===i.useWalletApi||i.useWalletApi,a=await this.bridgeComponents.tokensBridgeDataProvider.getRegisteredTokenPair(t);if(!a)throw Error("Token (".concat(t.type).concat("fa1.2"===t.type?", "+t.address:"").concat("fa2"===t.type?", "+t.tokenId:"",") is not listed"));let d="native"===t.type?a.tezos.ticketerContractAddress:a.tezos.tickerHelperContractAddress,c="native"===t.type?void 0:a.etherlink.token.address,l=await (o?this.depositUsingWalletApi(t,e,n,i,d,c):this.depositUsingContractApi(t,e,n,i,d,c));return this.events.tokenTransferCreated.emit(l.tokenTransfer),l}async startWithdraw(e,t,r){if("native"===t.type)throw Error("Withdrawal of native tokens is not supported yet");r||(r=await this.getTezosConnectedAddress());let s=await this.bridgeComponents.tokensBridgeDataProvider.getRegisteredTokenPair(t);if(!s)throw Error("Token (".concat(t.address,") is not listed"));let n=s.tezos.ticketerContractAddress,i=s.etherlink.token.address,[o,a]=await Promise.all([this.getEtherlinkConnectedAddress(),this.getTezosTicketerContent(n)]),d=await this.bridgeComponents.etherlink.withdraw({tezosReceiverAddress:r,amount:e,tezosTicketerContent:a,etherlinkSenderAddress:o,etherlinkTokenProxyContractAddress:i,tezosProxyAddress:n,tezosTicketerAddress:n}),c={kind:1,status:0,source:B.toChecksumAddress(d.from),receiver:r,etherlinkOperation:{hash:d.transactionHash.toString(),timestamp:Date.now().toString(),amount:e,token:t}};return this.events.tokenTransferCreated.emit(c),{tokenTransfer:c,startWithdrawOperation:d}}async finishWithdraw(e){return await this.bridgeComponents.tezos.finishWithdraw(e.rollupData.commitment,e.rollupData.proof),{tokenTransfer:e}}async getTezosConnectedAddress(){return this.tezosToolkit.wallet.pkh()}async getEtherlinkConnectedAddress(){let e=(await this.etherlinkToolkit.eth.getAccounts())[0]||this.etherlinkToolkit.eth.defaultAccount;if(!e)throw Error("Address is unavailable");return e}getBalance(e,t){return this.bridgeComponents.balancesBridgeDataProvider.getBalance(e,t)}getBalances(e,t,r){return this.bridgeComponents.balancesBridgeDataProvider.getBalances(e,t,r)}getRegisteredTokenPair(e){return this.bridgeComponents.tokensBridgeDataProvider.getRegisteredTokenPair(e)}getRegisteredTokenPairs(e,t){return this.bridgeComponents.tokensBridgeDataProvider.getRegisteredTokenPairs(e,t)}getTokenTransfer(e){return this.bridgeComponents.transfersBridgeDataProvider.getTokenTransfer(e)}getTokenTransfers(e,t,r){return this.bridgeComponents.transfersBridgeDataProvider.getTokenTransfers(e,t,r)}resolveStatusWatcherIfNeeded(e){let t=R.getInitialOperationHash(e),r=this.tokenTransferOperationWatchers.get(t);if(r){for(let[t,s]of r)e.status>=t&&(s.resolve(e),r.delete(t));r.size||this.tokenTransferOperationWatchers.delete(t)}}rejectAndClearAllStatusWatchers(e){for(let t of this.tokenTransferOperationWatchers.values()){for(let r of t.values())r.reject(e);t.clear()}this.tokenTransferOperationWatchers.clear()}attachEvents(){this.bridgeComponents.transfersBridgeDataProvider.events.tokenTransferCreated.addListener(this.handleTransfersBridgeDataProviderTokenTransferCreated),this.bridgeComponents.transfersBridgeDataProvider.events.tokenTransferUpdated.addListener(this.handleTransfersBridgeDataProviderTokenTransferUpdated)}detachEvents(){this.bridgeComponents.transfersBridgeDataProvider.events.tokenTransferUpdated.removeListener(this.handleTransfersBridgeDataProviderTokenTransferUpdated),this.bridgeComponents.transfersBridgeDataProvider.events.tokenTransferCreated.removeListener(this.handleTransfersBridgeDataProviderTokenTransferCreated)}async depositUsingWalletApi(e,t,r,s,n,i){let o="native"===e.type;if(!o&&!i)throw Error("Etherlink Token Proxy contract not specified");let[a,d]=await Promise.all([o?this.bridgeComponents.tezos.wallet.depositNativeToken({amount:t,etherlinkReceiverAddress:r,ticketerContractAddress:n}):this.bridgeComponents.tezos.wallet.depositNonNativeToken({token:e,amount:t,etherlinkReceiverAddress:r,ticketHelperContractAddress:n,etherlinkTokenProxyContractAddress:i}),this.getTezosConnectedAddress()]);return{tokenTransfer:{kind:0,status:0,source:d,receiver:r,tezosOperation:{hash:a.opHash,timestamp:new Date().toISOString(),amount:t,token:e}},depositOperation:a}}async depositUsingContractApi(e,t,r,s,n,i){let o="native"===e.type;if(!o&&!i)throw Error("Etherlink Token Proxy contract not specified");let a=await (o?this.bridgeComponents.tezos.depositNativeToken({amount:t,etherlinkReceiverAddress:r,ticketerContractAddress:n}):this.bridgeComponents.tezos.depositNonNativeToken({token:e,amount:t,etherlinkReceiverAddress:r,ticketHelperContractAddress:n,etherlinkTokenProxyContractAddress:i}));return{tokenTransfer:{kind:0,status:0,source:a.source,receiver:r,tezosOperation:{hash:a.hash,timestamp:new Date().toISOString(),amount:t,token:e}},depositOperation:a}}async getTezosTicketerContent(e){let t=[...Object.values((await this.tezosToolkit.contract.getStorage(e)).content)],r=this.tezosTicketerContentSchema.Encode(t);return"0x"+(0,i.cz)(r,$).bytes.slice(2)}constructor(e){g(this,"data"),g(this,"bridgeComponents"),g(this,"events",{tokenTransferCreated:new N,tokenTransferUpdated:new N}),g(this,"tezosToolkit"),g(this,"etherlinkToolkit"),g(this,"tezosTicketerContentSchema",new o.V_($)),g(this,"tokenTransferOperationWatchers",new Map),g(this,"_isStarted",!1),g(this,"handleTransfersBridgeDataProviderTokenTransferCreated",e=>{this.events.tokenTransferCreated.emit(e)}),g(this,"handleTransfersBridgeDataProviderTokenTransferUpdated",e=>{this.resolveStatusWatcherIfNeeded(e),this.events.tokenTransferUpdated.emit(e)}),this.tezosToolkit=e.tezos.toolkit,this.etherlinkToolkit=e.etherlink.toolkit;let t=new Z({tezosToolkit:this.tezosToolkit,rollupAddress:e.tezos.bridgeOptions.rollupAddress}),r=new j({etherlinkToolkit:this.etherlinkToolkit,kernelAddress:e.etherlink.bridgeOptions.kernelAddress,withdrawPrecompileAddress:e.etherlink.bridgeOptions.withdrawPrecompileAddress});this.bridgeComponents={tezos:t,etherlink:r,tokensBridgeDataProvider:e.bridgeDataProviders.tokens,balancesBridgeDataProvider:e.bridgeDataProviders.balances,transfersBridgeDataProvider:e.bridgeDataProviders.transfers},this.data={getBalance:this.getBalance.bind(this),getBalances:this.getBalances.bind(this),getRegisteredTokenPair:this.getRegisteredTokenPair.bind(this),getRegisteredTokenPairs:this.getRegisteredTokenPairs.bind(this),getTokenTransfer:this.getTokenTransfer.bind(this),getTokenTransfers:this.getTokenTransfers.bind(this)}}},et=class{getRegisteredTokenPair(e){var t,r,s;return Promise.resolve(("native"===e.type?this.tokenPairsByTokenMap[e.type]:"fa1.2"===e.type||"erc20"===e.type?null===(t=this.tokenPairsByTokenMap[e.type])||void 0===t?void 0:t[e.address]:"fa2"===e.type?null===(s=this.tokenPairsByTokenMap[e.type])||void 0===s?void 0:null===(r=s[e.address])||void 0===r?void 0:r[e.tokenId]:null)||null)}getRegisteredTokenPairs(e,t){return Promise.resolve(this.tokenPairs.slice(e,t&&t+(e||0)))}createTokenPairsByTokenMap(e){let t={};for(let r of e)"native"===r.tezos.token.type?t.native=r:(t[r.tezos.token.type]||(t[r.tezos.token.type]={}),"fa1.2"===r.tezos.token.type?t[r.tezos.token.type][r.tezos.token.address]=r:(t[r.tezos.token.type][r.tezos.token.address]||(t[r.tezos.token.type][r.tezos.token.address]={}),t[r.tezos.token.type][r.tezos.token.address][r.tezos.token.tokenId]=r)),"native"!==r.etherlink.token.type&&(t[r.etherlink.token.type]||(t[r.etherlink.token.type]={}),"erc20"===r.etherlink.token.type&&(t[r.etherlink.token.type][r.etherlink.token.address]=r));return t}constructor(e){this.tokenPairs=e,g(this,"tokenPairsByTokenMap"),this.tokenPairsByTokenMap=this.createTokenPairsByTokenMap(e)}},er=class e{getTokenTransferQuery(e){return this.getTokenTransferQueryOrSubscription(e,!0)}getTokenTransferSubscriptions(e){return[this.getTokenTransferQueryOrSubscription(e,!1,!0),this.getTokenTransferQueryOrSubscription(e,!1,!1)]}getTokenTransfersQuery(e,t,r){let s=t+r,n="",i="";if(e){if("string"==typeof e||1===e.length){let t="string"==typeof e?e:e[0];n=this.getWhereArgumentForOneAddress(t,!0),i=this.getWhereArgumentForOneAddress(t,!1)}else e.length>1&&(n=this.getWhereArgumentForMultipleAddresses(e,!0),i=this.getWhereArgumentForMultipleAddresses(e,!1))}return n&&(n=", "+n),i&&(i=", "+i),"query TokenTransfers {\n      bridge_deposit(\n        order_by: { l1_transaction: { timestamp: desc } },\n        limit: ".concat(s,"\n        ").concat(n,"\n      ) {\n        ").concat(this.queryParts.bridgeDepositFields,"\n      }\n      bridge_withdrawal(\n        order_by: { l2_transaction: { timestamp: desc } },\n        limit: ").concat(s,"\n        ").concat(i,"\n      ) {\n        ").concat(this.queryParts.bridgeWithdrawalFields,"\n      }\n    }")}getTokenTransferQueryOrSubscription(e,t,r){let s;return this.isEtherlinkTransaction(e)?(e=this.prepareEtherlinkHexValue(e),s='where: {\n        l2_transaction: { transaction_hash: { _eq: "'.concat(e,'" } }\n      }')):s='where: {\n        l1_transaction: { operation_hash: { _eq: "'.concat(e,'" } }\n      }'),t?"query TokenTransfer {\n          bridge_deposit(".concat(s,") {\n            ").concat(this.queryParts.bridgeDepositFields,"\n          }\n          bridge_withdrawal(").concat(s,") {\n            ").concat(this.queryParts.bridgeWithdrawalFields,"\n          }\n        }"):r?"subscription TokenTransfer {\n            bridge_deposit(".concat(s,") {\n              ").concat(this.queryParts.bridgeDepositFields,"\n            }\n          }"):"subscription TokenTransfer {\n          bridge_withdrawal(".concat(s,") {\n            ").concat(this.queryParts.bridgeWithdrawalFields,"\n          }\n        }")}getWhereArgumentForOneAddress(e,t){return this.isEtherlinkAddress(e)?"where: {\n        ".concat(t?"l1_transaction":"l2_transaction",': { l2_account: { _eq: "').concat(this.prepareEtherlinkHexValue(e),'" } }\n      }'):"where: {\n        ".concat(t?"l1_transaction":"l2_transaction",': { l1_account: { _eq: "').concat(e,'" } }\n      }')}getWhereArgumentForMultipleAddresses(e,t){let{tezosAddresses:r,etherlinkAddresses:s}=this.splitAddressesToTezosAndEtherlinkAddresses(e),n=r.length>0&&s.length>0,i="where: ";return n&&(i+=" { _or: ["),1===r.length?i+="{\n        ".concat(t?"l1_transaction":"l2_transaction",': { l1_account: { _eq: "').concat(r[0],'" } }\n      }'):r.length>1&&(i+="{\n        ".concat(t?"l1_transaction":"l2_transaction",": { l1_account: { _in: ").concat(this.arrayToInOperatorValue(r)," } }\n      }")),n&&(i+=","),1===s.length?i+="{\n        ".concat(t?"l1_transaction":"l2_transaction",': { l2_account: { \n          _eq: "').concat(this.prepareEtherlinkHexValue(s[0]),'"\n        } }\n      }'):s.length>1&&(i+="{\n        ".concat(t?"l1_transaction":"l2_transaction",": { l2_account: {\n          _in: ").concat(this.arrayToInOperatorValue(s.map(e=>this.prepareEtherlinkHexValue(e))),"\n        } }\n      }")),n&&(i+=" ] }"),i}splitAddressesToTezosAndEtherlinkAddresses(e){let t=[],r=[];for(let s of e)this.isEtherlinkAddress(s)?r.push(s):t.push(s);return{tezosAddresses:t,etherlinkAddresses:r}}isEtherlinkTransaction(e){return 66===e.length&&e.startsWith("0x")}isEtherlinkAddress(e){return e.startsWith("0x")}prepareEtherlinkHexValue(e){return B.prepareHexPrefix(e,!1).toLowerCase()}arrayToInOperatorValue(e){return e.reduce((t,r,s)=>{let n=t+'"'.concat(r,'"');return s<e.length-1&&(n+=","),n},"[")+"]"}constructor(t=e.defaultQueryParts){this.queryParts=t}};g(er,"defaultQueryParts",{bridgeDepositFields:"\nl1_transaction {\n  level\n  operation_hash\n  amount\n  ticket {\n    token {\n      type\n      contract_address\n      token_id\n    }\n  }\n  l1_account\n  l2_account\n  timestamp\n  inbox_message {\n    type\n    level\n    index\n  }\n}\nl2_transaction {\n  level\n  transaction_hash\n  amount\n  l2_token {\n    id\n  }\n  timestamp\n}",bridgeWithdrawalFields:"\nl1_transaction {\n  level\n  operation_hash\n  timestamp\n}\nl2_transaction {\n  level\n  transaction_hash\n  amount\n  l2_token {\n    id\n    tezos_ticket {\n      token {\n        type\n        contract_address\n        token_id\n      }\n    }\n  }\n  l1_account\n  l2_account\n  timestamp\n  outbox_message {\n    level\n    index\n    commitment {\n      hash\n    }\n    proof\n  }\n}"});var es=e=>{let t=e.type.toLowerCase();return"fa1.2"===t?{type:"fa1.2",address:e.contract_address}:"fa2"===t?{type:"fa2",address:e.contract_address,tokenId:e.token_id}:{type:"native"}},en=e=>({type:"erc20",address:B.toChecksumAddress(e)}),ei=e=>{let t=e.l1_transaction.l1_account,r=B.toChecksumAddress(e.l1_transaction.l2_account),s={blockId:e.l1_transaction.level,hash:e.l1_transaction.operation_hash,amount:BigInt(e.l1_transaction.amount),token:es(e.l1_transaction.ticket.token),fee:0n,timestamp:e.l1_transaction.timestamp};return e.l2_transaction?{kind:0,status:300,source:t,receiver:r,tezosOperation:s,etherlinkOperation:{blockId:e.l2_transaction.level,hash:B.prepareHexPrefix(e.l2_transaction.transaction_hash,!0),amount:BigInt(e.l2_transaction.amount),token:en(e.l2_transaction.l2_token.id),fee:0n,timestamp:e.l2_transaction.timestamp}}:{kind:0,status:100,source:t,receiver:r,tezosOperation:s}},eo=e=>{var t;let r=B.toChecksumAddress(e.l2_transaction.l2_account),s=e.l2_transaction.l1_account,n=BigInt(e.l2_transaction.amount),i={blockId:e.l2_transaction.level,hash:B.prepareHexPrefix(e.l2_transaction.transaction_hash,!0),amount:n,token:en(e.l2_transaction.l2_token.id),fee:0n,timestamp:e.l2_transaction.timestamp};return e.l1_transaction?{kind:1,status:300,source:r,receiver:s,tezosOperation:{blockId:e.l1_transaction.level,hash:e.l1_transaction.operation_hash,amount:n,token:es(e.l2_transaction.l2_token.tezos_ticket.token),fee:0n,timestamp:e.l1_transaction.timestamp},etherlinkOperation:i,rollupData:{outboxMessageLevel:e.l2_transaction.outbox_message.level,outboxMessageIndex:e.l2_transaction.outbox_message.index,commitment:(null===(t=e.l2_transaction.outbox_message.commitment)||void 0===t?void 0:t.hash)||"",proof:e.l2_transaction.outbox_message.proof||""}}:e.l2_transaction.outbox_message.commitment&&e.l2_transaction.outbox_message.proof?{kind:1,status:200,source:r,receiver:s,etherlinkOperation:i,rollupData:{outboxMessageLevel:e.l2_transaction.outbox_message.level,outboxMessageIndex:e.l2_transaction.outbox_message.index,commitment:e.l2_transaction.outbox_message.commitment.hash,proof:e.l2_transaction.outbox_message.proof}}:{kind:1,status:100,source:r,receiver:s,etherlinkOperation:i,rollupData:{outboxMessageLevel:e.l2_transaction.outbox_message.level,outboxMessageIndex:e.l2_transaction.outbox_message.index}}},ea=class e{get socket(){if(!this._socket)throw Error("Internal websocket is not created. Use the connect method first");return this._socket}async connect(){return this.disconnect(),new Promise((t,r)=>{this._socket=new WebSocket(this.url,e.webSocketProtocol);let s=()=>{this.socket.removeEventListener("open",s),t()},n=e=>{this.socket.removeEventListener("error",n),r(e)};this.socket.addEventListener("open",s),this.socket.addEventListener("error",n),this.socket.addEventListener("message",this.onMessageReceived),this.socket.addEventListener("error",this.onError),this.socket.addEventListener("close",this.onClosed)})}disconnect(){this._socket&&(this.socket.removeEventListener("message",this.onMessageReceived),this.socket.removeEventListener("error",this.onError),this.socket.removeEventListener("close",this.onClosed),this.socket.close())}send(e){this.socket.send(JSON.stringify(e))}constructor(e){this.url=e,g(this,"events",{messageReceived:new N,closed:new N}),g(this,"_socket"),g(this,"onMessageReceived",e=>{try{let t=JSON.parse(e.data);this.events.messageReceived.emit(t)}catch(e){console.error(e)}}),g(this,"onError",e=>{throw Error("Websocket received error: ".concat(JSON.stringify(e)))}),g(this,"onClosed",e=>{this.events.closed.emit(this,e)})}};g(ea,"webSocketProtocol","graphql-ws");var ed=class{get isStarted(){return this._isStarted}async start(){if(!this.isStarted&&!this._isStarting){this._isStarting=!0;try{this.socket.events.messageReceived.addListener(this.onSocketMessageReceived),this.socket.events.closed.addListener(this.onSocketClosed),await this.connect(),this._isStarted=!0}catch(e){throw this._isStarting=!1,this._isStarted=!1,Error("Socket error",{cause:e})}}}stop(){this.isStarted&&(this.socket.events.messageReceived.removeListener(this.onSocketMessageReceived),this.socket.events.closed.removeListener(this.onSocketClosed),this.disconnect(),this.reconnectScheduler[Symbol.dispose](),this._isStarted=!1)}subscribe(e){let t=this.subscriptions.get(e);return t?(t.subscribersCount++,!1):(t={id:this.subscriptionIdCounter++,query:e,subscribersCount:1},this.subscribeToSubscription(t),this.subscriptions.set(t.query,t),!0)}unsubscribe(e){let t=this.subscriptions.get(e);return!(!t||--t.subscribersCount>0)&&(this.unsubscribeFromSubscription(t.id),this.subscriptions.delete(t.query),!0)}async connect(){for(let e of(await this.socket.connect(),this.socket.send({type:"connection_init",payload:{headers:{"content-type":"application/json"},lazy:!0}}),this.subscriptions.values()))this.subscribeToSubscription(e)}subscribeToSubscription(e){let t={type:"start",id:e.id.toString(),payload:{query:e.query}};this.socket.send(t)}unsubscribeFromSubscription(e){let t={type:"stop",id:e.toString()};this.socket.send(t)}disconnect(){this.socket.disconnect(),this.subscriptions.clear()}constructor(e){this.webSocketApiBaseUrl=e,g(this,"events",{messageReceived:new N}),g(this,"socket"),g(this,"subscriptions",new Map),g(this,"subscriptionIdCounter",0),g(this,"reconnectScheduler",new Q([1e3,5e3,3e4,6e4],12e4)),g(this,"_isStarted",!1),g(this,"_isStarting",!1),g(this,"onSocketClosed",(e,t)=>{this.reconnectScheduler.setTimeout(()=>{this.connect()})}),g(this,"onSocketMessageReceived",e=>{switch(e.type){case"ka":case"connection_ack":break;default:this.events.messageReceived.emit(e)}}),this.socket=new ea(new URL(_.trimSlashes(this.webSocketApiBaseUrl)+"/v1/graphql"))}},ec=class e extends M{get isStarted(){return this._isStarted}async start(){if(!this.isStarted&&!this._isStarting){this._isStarting=!0;try{this.dipDupWebSocketClient&&(this.dipDupWebSocketClient.events.messageReceived.addListener(this.onSocketMessageReceived),await this.dipDupWebSocketClient.start()),this._isStarted=!0}catch(e){throw this._isStarting=!1,this._isStarted=!1,Error(void 0,{cause:e})}}}stop(){this.isStarted&&(this.dipDupWebSocketClient&&(this.dipDupWebSocketClient.events.messageReceived.removeListener(this.onSocketMessageReceived),this.dipDupWebSocketClient.stop()),this._isStarted=!1)}async getTokenTransfer(e){let t="string"==typeof e?e:0===e.kind?e.tezosOperation.hash:e.etherlinkOperation.hash,r=await this.fetch("/v1/graphql","json",{method:"POST",body:JSON.stringify({query:this.dipDupGraphQLQueryBuilder.getTokenTransferQuery(t)})});if(r.errors)throw Error("Indexer error: ".concat(r.errors.join("\n")));return r.data.bridge_deposit[0]&&ei(r.data.bridge_deposit[0])||r.data.bridge_withdrawal[0]&&eo(r.data.bridge_withdrawal[0])||null}async getTokenTransfers(t,r,s){let n,i,o;void 0!==t&&("number"==typeof t?(i=t,o=r):(n=t,i=r,o=s)),i=i&&i>0?i:0,o=o&&o>0?o:e.defaultLoadDataLimit;let a=await this.fetch("/v1/graphql","json",{method:"POST",body:JSON.stringify({query:this.dipDupGraphQLQueryBuilder.getTokenTransfersQuery(n,i,o)})});if(a.errors)throw Error("Indexer error: ".concat(a.errors.join("\n")));let d=[];for(let e of a.data.bridge_deposit)d.push(ei(e));for(let e of a.data.bridge_withdrawal)d.push(eo(e));return d.sort((e,t)=>{let r=0===e.kind?e.tezosOperation.timestamp:e.etherlinkOperation.timestamp,s=0===t.kind?t.tezosOperation.timestamp:t.etherlinkOperation.timestamp;return r.localeCompare(s)}),d.slice(i,i+o),d}subscribeToTokenTransfer(e){if(!this.dipDupWebSocketClient)throw Error("AutoUpdate is disabled");let t="string"==typeof e?e:R.getInitialOperationHash(e),r=this.dipDupGraphQLQueryBuilder.getTokenTransferSubscriptions(t);this.dipDupWebSocketClient.subscribe(r[0]),this.dipDupWebSocketClient.subscribe(r[1])}unsubscribeFromTokenTransfer(e){if(!this.dipDupWebSocketClient)throw Error("AutoUpdate is disabled");let t="string"==typeof e?e:R.getInitialOperationHash(e),r=this.dipDupGraphQLQueryBuilder.getTokenTransferSubscriptions(t);this.dipDupWebSocketClient.unsubscribe(r[1]),this.dipDupWebSocketClient.unsubscribe(r[0])}subscribeToTokenTransfers(e){}unsubscribeFromTokenTransfers(e){}unsubscribeFromAllTokenTransfers(){}getBalance(e,t){throw Error("Method not implemented.")}getBalances(e,t,r){throw Error("Method not implemented.")}[Symbol.dispose](){this.stop()}createDipDupGraphQLQueryBuilder(){return new er}constructor(e){super(e.baseUrl),g(this,"events",{tokenTransferCreated:new N,tokenTransferUpdated:new N}),g(this,"dipDupGraphQLQueryBuilder"),g(this,"dipDupWebSocketClient"),g(this,"_isStarted",!1),g(this,"_isStarting",!1),g(this,"onSocketMessageReceived",e=>{var t,r;if("data"!==e.type||!e.payload.data)return;let s=e.payload.data;if(null==s?void 0:null===(t=s.bridge_deposit)||void 0===t?void 0:t[0]){let e=ei(s.bridge_deposit[0]);this.events.tokenTransferUpdated.emit(e)}else if(null==s?void 0:null===(r=s.bridge_withdrawal)||void 0===r?void 0:r[0]){let e=eo(s.bridge_withdrawal[0]);this.events.tokenTransferUpdated.emit(e)}}),this.dipDupWebSocketClient=e.autoUpdate?new ed(e.autoUpdate.webSocketApiBaseUrl):null,this.dipDupGraphQLQueryBuilder=this.createDipDupGraphQLQueryBuilder()}};g(ec,"defaultLoadDataLimit",100);var el="0x0000000000000000000000000000000000000000",eh="0x0000000000000000000000000000000000000040",ep=e=>{let t=new ec(e.dipDup),r=y.isReadonlyArray(e.tokenPairs)?new et(e.tokenPairs):e.tokenPairs;return new ee({tezos:{toolkit:e.tezos.toolkit,bridgeOptions:{rollupAddress:e.tezos.rollupAddress}},etherlink:{toolkit:e.etherlink.toolkit,bridgeOptions:{kernelAddress:el,withdrawPrecompileAddress:eh}},bridgeDataProviders:{tokens:r,balances:t,transfers:t}})}}}]);